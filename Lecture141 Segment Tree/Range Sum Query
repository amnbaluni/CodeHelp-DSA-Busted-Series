https://www.geeksforgeeks.org/problems/sum-of-query-ii5310/1
TC = Q*logN
class Solution{
public:
    void buildSegmentTree(int i, int l, int r, vector<int> &segmentTree, int arr[]){
        //base case
        if(l == r){
            segmentTree[i] = arr[l];
            return;
        }
        int mid = l + (r-l) / 2;
        buildSegmentTree(2*i+1, l, mid, segmentTree, arr);
        buildSegmentTree(2*i+2, mid+1, r, segmentTree, arr);
        
        segmentTree[i] = segmentTree[2*i+1] + segmentTree[2*i+2];
    }
    
    int Query(int start, int end, int i, int l, int r, vector<int> &segmentTree){
        if(l > end || r < start){
            //out of range
            return 0;
        }
        if(l >= start && r <= end){
            //within the range
            return segmentTree[i];
        }
        int mid = l + (r-l) / 2;
        
        return Query(start, end, 2*i+1, l, mid, segmentTree) + 
               Query(start, end, 2*i+2, mid+1, r, segmentTree);;
    }
    vector<int> querySum(int n, int arr[], int q, int queries[])
    {
        //build segment Tree
        vector<int> segmentTree(4*n);
        buildSegmentTree(0, 0, n-1, segmentTree, arr);
        vector<int> result;   //to store and return result
        for(int i=0; i<2*q; i+=2){
            int start = queries[i]-1;   //doing minus because to work in zero based indexing
            int end = queries[i+1]-1;
            result.push_back(Query(start, end, 0, 0, n-1, segmentTree));
        }
        return result;
    }
};
